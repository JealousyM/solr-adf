package by.perevertkin.solr.model.view;

import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 26 10:15:02 MSK 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ArticlesViewRowImpl extends ViewRowImpl {
    public static final int ENTITY_ARTICLES = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        Title,
        Author,
        Content;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int AUTHOR = AttributesEnum.Author.index();
    public static final int CONTENT = AttributesEnum.Content.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ArticlesViewRowImpl() {
    }

    /**
     * Gets Articles entity object.
     * @return the Articles
     */
    public EntityImpl getArticles() {
        return (EntityImpl) getEntity(ENTITY_ARTICLES);
    }

    /**
     * Gets the attribute value for id using the alias name Id.
     * @return the id
     */
    public Integer getId() {
        return (Integer) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for id using the alias name Id.
     * @param value value to set the id
     */
    public void setId(Integer value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for Title using the alias name Title.
     * @return the Title
     */
    public String getTitle() {
        return (String) getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as attribute value for Title using the alias name Title.
     * @param value value to set the Title
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for Author using the alias name Author.
     * @return the Author
     */
    public String getAuthor() {
        return (String) getAttributeInternal(AUTHOR);
    }

    /**
     * Sets <code>value</code> as attribute value for Author using the alias name Author.
     * @param value value to set the Author
     */
    public void setAuthor(String value) {
        setAttributeInternal(AUTHOR, value);
    }

    /**
     * Gets the attribute value for Content using the alias name Content.
     * @return the Content
     */
    public String getContent() {
        return (String) getAttributeInternal(CONTENT);
    }

    /**
     * Sets <code>value</code> as attribute value for Content using the alias name Content.
     * @param value value to set the Content
     */
    public void setContent(String value) {
        setAttributeInternal(CONTENT, value);
    }
}

